# Server Configuration
server:
  port: 8080
  servlet:
    context-path: /api

# Spring Configuration
spring:
  application:
    name: backend-api
  
  # Database Configuration
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: password
  
  # H2 Console Configuration
  h2:
    console:
      enabled: true
      path: /h2-console
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.H2Dialect
    defer-datasource-initialization: true
  
  # Data Initialization
  sql:
    init:
      mode: always
      data-locations: classpath:data.sql
  
  # Jackson Configuration
  jackson:
    default-property-inclusion: non_null
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false

# JWT Configuration
jwt:
  secret: your-secret-key-here-make-it-long-and-secure-in-production
  expiration: 86400000 # 24 hours in milliseconds

# Logging Configuration
logging:
  level:
    com.example.backend: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized

# Swagger/OpenAPI Configuration
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
    tags-sorter: alpha
  info:
    title: Product Catalog API
    description: RESTful API for managing product catalog with authentication
    version: 1.0.0
    contact:
      name: Senior Developer Assessment
      email: developer@example.com
  servers:
    - url: http://localhost:8080/api
      description: Development server

# CORS Configuration
cors:
  allowed-origins: http://localhost:3000
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: "*"
  allow-credentials: true
  max-age: 3600 